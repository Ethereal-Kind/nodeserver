import { ConstructorOptions, WebRtcConnection } from "./WebRtcConnection";
export declare const webRtcConnectionFactory: {
    createConnection(opts: ConstructorOptions): WebRtcConnection;
    registerWebRtcEndpoint(): void;
    unregisterWebRtcEndpoint(): void;
};
export declare class BrowserWebRtcConnection extends WebRtcConnection {
    private readonly logger;
    private peerConnection;
    private dataChannel;
    private lastState?;
    private lastGatheringState;
    private makingOffer;
    constructor(opts: ConstructorOptions);
    protected doConnect(): void;
    protected doClose(err?: Error): void;
    private doSetRemoteDescription;
    setRemoteDescription(description: string, type: string): void;
    addRemoteCandidate(candidate: string, mid: string): void;
    getBufferedAmount(): number;
    getMaxMessageSize(): number;
    isOpen(): boolean;
    getLastState(): string | undefined;
    getLastGatheringState(): string | undefined;
    protected doSendMessage(message: string): boolean;
    private setupDataChannel;
    private openDataChannel;
    close(err?: Error): void;
}
