"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.runModifyPermissionsCommand = exports.getPermissionId = exports.getPermission = exports.PERMISSIONS = void 0;
const commander_1 = require("commander");
const streamr_client_1 = require("streamr-client");
const command_1 = require("./command");
const PUBLIC_USER_ID = 'public';
exports.PERMISSIONS = new Map([
    ['subscribe', streamr_client_1.StreamPermission.SUBSCRIBE],
    ['publish', streamr_client_1.StreamPermission.PUBLISH],
    ['edit', streamr_client_1.StreamPermission.EDIT],
    ['delete', streamr_client_1.StreamPermission.DELETE],
    ['grant', streamr_client_1.StreamPermission.GRANT]
]);
const getPermission = (id) => {
    const result = exports.PERMISSIONS.get(id);
    if (result === undefined) {
        throw new Error(`unknown permission: ${id}`);
    }
    return result;
};
exports.getPermission = getPermission;
const getPermissionId = (permission) => {
    return Array.from(exports.PERMISSIONS.entries()).find(([_id, p]) => p === permission)[0];
};
exports.getPermissionId = getPermissionId;
const runModifyPermissionsCommand = (modify, modification) => {
    (0, command_1.createClientCommand)(async (client, streamId, user, permissionIds) => {
        const stream = await client.getStream(streamId);
        const permissions = permissionIds.map((permissionId) => (0, exports.getPermission)(permissionId));
        let assignment;
        if (user === PUBLIC_USER_ID) {
            assignment = {
                permissions,
                public: true
            };
        }
        else {
            assignment = {
                permissions,
                user
            };
        }
        await modify(stream, assignment);
    })
        .addArgument(new commander_1.Argument('<streamId>'))
        .addArgument(new commander_1.Argument('<user>'))
        .addArgument(new commander_1.Argument('<permissions...>').choices(Array.from(exports.PERMISSIONS.keys())))
        .description(`${modification} permission: use keyword "public" as a user to ${modification} a public permission`)
        .parseAsync(process.argv);
};
exports.runModifyPermissionsCommand = runModifyPermissionsCommand;
//# sourceMappingURL=permission.js.map