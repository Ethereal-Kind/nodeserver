"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createClient = void 0;
const lodash_1 = require("lodash");
const streamr_client_1 = require("streamr-client");
const config_1 = require("./config");
const getClientConfig = (commandLineArgs, overridenOptions) => {
    var _a;
    const environmentOptions = (commandLineArgs.dev !== undefined) ? (0, lodash_1.omit)(streamr_client_1.ConfigTest, 'auth') : undefined;
    const configFileJson = (_a = (0, config_1.getConfig)(commandLineArgs.config)) === null || _a === void 0 ? void 0 : _a.client;
    const authenticationOptions = (commandLineArgs.privateKey !== undefined) ? { auth: { privateKey: commandLineArgs.privateKey } } : undefined;
    return (0, lodash_1.merge)(environmentOptions, configFileJson, authenticationOptions, overridenOptions);
};
const addInterruptHandler = (client) => {
    process.on('SIGINT', async () => {
        try {
            await client.destroy();
        }
        catch { }
        process.exit();
    });
};
const createClient = (commandLineArgs, overridenOptions = {}) => {
    const config = getClientConfig(commandLineArgs, overridenOptions);
    const client = new streamr_client_1.StreamrClient(config);
    addInterruptHandler(client);
    return client;
};
exports.createClient = createClient;
//# sourceMappingURL=client.js.map