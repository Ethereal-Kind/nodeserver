#!/usr/bin/env node
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.generate = void 0;
const package_json_1 = __importDefault(require("../package.json"));
const common_1 = require("../src/common");
const command_1 = require("../src/command");
// From: https://stackoverflow.com/questions/10726909/random-alpha-numeric-string-in-javascript
function randomString(length, chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ') {
    let result = '';
    for (let i = length; i > 0; --i) {
        result += chars[Math.floor(Math.random() * chars.length)];
    }
    return result;
}
function genArray(size, elementFn) {
    const arr = [];
    for (let i = 0; i < size; ++i) {
        arr.push(elementFn());
    }
    return arr;
}
const generate = (rate) => {
    setInterval(() => {
        console.info(JSON.stringify({
            someText: randomString(64),
            aNumber: Math.random() * 10000,
            bNumber: Math.random(),
            yesOrNo: Math.random() > 0.5,
            arrayOfStrings: genArray(Math.floor(Math.random() * 20), () => randomString(8)),
            arrayOfIntegers: genArray(Math.floor(Math.random() * 10), () => Math.floor(Math.random() * 100))
        }));
    }, rate);
};
exports.generate = generate;
(0, command_1.createCommand)()
    .description('generate and print semi-random JSON data to stdout')
    .option('-r, --rate <n>', 'rate in milliseconds', (0, common_1.createFnParseInt)('--rate'), 500)
    .version(package_json_1.default.version)
    .action((options) => {
    (0, exports.generate)(options.rate);
})
    .parse();
//# sourceMappingURL=streamr-mock-data-generate.js.map