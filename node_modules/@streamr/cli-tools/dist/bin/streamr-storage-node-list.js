#!/usr/bin/env node
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
require("../src/logLevel");
const easy_table_1 = __importDefault(require("easy-table"));
const command_1 = require("../src/command");
const getStorageNodes = async (streamId, client) => {
    if (streamId !== undefined) {
        const stream = await client.getStream(streamId);
        return stream.getStorageNodes();
    }
    else {
        return client.getAllStorageNodes();
    }
};
(0, command_1.createClientCommand)(async (client, options) => {
    const streamId = options.stream;
    const addresses = await getStorageNodes(streamId, client);
    if (addresses.length > 0) {
        console.info(easy_table_1.default.print(addresses.map((address) => ({
            address
        }))));
    }
})
    .description('fetch a list of storage nodes')
    .option('-s, --stream <streamId>', 'only storage nodes which store the given stream (needs authentication)')
    .parseAsync();
//# sourceMappingURL=streamr-storage-node-list.js.map