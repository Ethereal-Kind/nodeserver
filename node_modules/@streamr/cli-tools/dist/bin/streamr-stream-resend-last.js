#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("../src/logLevel");
const command_1 = require("../src/command");
const resend_1 = require("../src/resend");
(0, command_1.createClientCommand)(async (client, n, streamId, options) => {
    if (isNaN(n)) {
        console.error('argument n is not a number');
        process.exit(1);
    }
    const resendOptions = {
        last: parseInt(n)
    };
    await (0, resend_1.resend)(streamId, resendOptions, client, options.subscribe);
}, {
    clientOptionsFactory: (options) => ({
        orderMessages: !options.disableOrdering
    })
})
    .arguments('<n> <streamId>')
    .description('request last N messages')
    .option('-d, --disable-ordering', 'disable ordering of messages by OrderingUtil', false)
    .option('-s, --subscribe', 'subscribe in addition to resend', false)
    .parseAsync();
//# sourceMappingURL=streamr-stream-resend-last.js.map