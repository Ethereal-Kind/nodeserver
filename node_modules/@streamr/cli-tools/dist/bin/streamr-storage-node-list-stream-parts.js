#!/usr/bin/env node
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
require("../src/logLevel");
const easy_table_1 = __importDefault(require("easy-table"));
const command_1 = require("../src/command");
const streamr_client_protocol_1 = require("streamr-client-protocol");
(0, command_1.createClientCommand)((async (client, storageNodeAddress) => {
    const streamParts = await client.getStreamPartsByStorageNode(storageNodeAddress);
    if (streamParts.length > 0) {
        console.info(easy_table_1.default.print(streamParts.map((streamPartId) => {
            const [streamId, streamPartition] = streamr_client_protocol_1.StreamPartIDUtils.getStreamIDAndPartition(streamPartId);
            return {
                streamId,
                streamPartition
            };
        })));
    }
}))
    .arguments('<storageNodeAddress>')
    .description('list stream parts in a storage node')
    .parseAsync();
//# sourceMappingURL=streamr-storage-node-list-stream-parts.js.map